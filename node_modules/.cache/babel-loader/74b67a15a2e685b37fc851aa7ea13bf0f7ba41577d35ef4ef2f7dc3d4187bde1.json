{"ast":null,"code":"/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/import{Link}from'react-router-dom';import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Credits=_ref=>{let{credits,setCredits,accountBalance,setAccountBalance}=_ref;//hooks to use for setCredits and setDescription\nconst[description,setDescription]=useState('');const[amount,setAmount]=useState('');//handles event when user clicks on add credit\nconst addCredit=e=>{e.preventDefault();//initialize credit object\nconst newCredit={id:credits.length+1,description:description,amount:parseFloat(amount).toFixed(2),date:new Date().toISOString().split('T')[0]};//adding a new credit item to the end of the list\nsetCredits([...credits,newCredit]);//updates balance to reflect the new item being added\nsetAccountBalance((parseFloat(accountBalance)+parseFloat(newCredit.amount)).toFixed(2));//resets to blank\nsetDescription('');setAmount('');};//displays credits in a list\nlet creditsView=()=>{return credits.map(credit=>{let date=credit.date.slice(0,10);return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Description: \"}),\" \",credit.description]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Amount: \"}),\" $\",parseFloat(credit.amount).toFixed(2)]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date: \"}),\" \",date]}),/*#__PURE__*/_jsx(\"hr\",{})]},credit.id);});};//contains form for user to add a new credit item to the list displayed (at the bottom)\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Credits\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Account Balance: $\",accountBalance]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:addCredit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:description,onChange:e=>setDescription(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",value:amount,onChange:e=>setAmount(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Credit\"})]}),/*#__PURE__*/_jsx(\"ul\",{children:creditsView()}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Return to Home\"})]});};export default Credits;","map":{"version":3,"sources":["C:/everything/documents/javascript/web dev/assignment3/CSCI39548-assignment-3/src/components/Credits.js"],"names":["Link","React","useState","Credits","credits","setCredits","accountBalance","setAccountBalance","description","setDescription","amount","setAmount","addCredit","e","preventDefault","newCredit","id","length","parseFloat","toFixed","date","Date","toISOString","split","creditsView","map","credit","slice","target","value"],"mappings":"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","sourcesContent":["/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport React, {useState} from 'react'\r\n\r\nconst Credits = ({credits, setCredits, accountBalance, setAccountBalance}) => {\r\n\r\n  //hooks to use for setCredits and setDescription\r\n  const [description, setDescription] = useState(''); \r\n  const [amount, setAmount] = useState(''); \r\n\r\n  //handles event when user clicks on add credit\r\n  const addCredit = (e) => \r\n  { \r\n    e.preventDefault();\r\n\r\n    //initialize credit object\r\n    const newCredit = { \r\n      id: credits.length + 1, \r\n      description: description, \r\n      amount: parseFloat(amount).toFixed(2), \r\n      date: new Date().toISOString().split('T')[0]\r\n      }; \r\n\r\n    \r\n    //adding a new credit item to the end of the list\r\n    setCredits([...credits, newCredit]); \r\n    //updates balance to reflect the new item being added\r\n    setAccountBalance((parseFloat(accountBalance) + parseFloat(newCredit.amount)).toFixed(2)); \r\n\r\n    //resets to blank\r\n    setDescription(''); \r\n    setAmount(''); \r\n  };\r\n\r\n  //displays credits in a list\r\n  let creditsView = () => \r\n    {\r\n      return credits.map((credit) => {\r\n        let date = credit.date.slice(0,10);\r\n        return (\r\n          <li key = {credit.id}>\r\n            <div>\r\n              <strong>Description: </strong> {credit.description}\r\n            </div>\r\n            <div>\r\n              <strong>Amount: </strong> ${parseFloat(credit.amount).toFixed(2)}\r\n            </div>\r\n            <div>\r\n              <strong>Date: </strong> {date}\r\n            </div>\r\n            <hr/>\r\n          </li>\r\n        );\r\n      });\r\n    };\r\n\r\n  //contains form for user to add a new credit item to the list displayed (at the bottom)\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n      <h2>Account Balance: ${accountBalance}</h2>\r\n\r\n      <form onSubmit = {addCredit}>\r\n        <div>\r\n          <label>Description:</label>\r\n          <input\r\n            type='text'\r\n            value={description}\r\n            onChange={(e)=>setDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Amount:</label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type='submit'>Add Credit</button>\r\n      </form>\r\n\r\n      <ul>{creditsView()}</ul>\r\n\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link> \r\n    </div>\r\n  );  \r\n}\r\n\r\nexport default Credits;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}