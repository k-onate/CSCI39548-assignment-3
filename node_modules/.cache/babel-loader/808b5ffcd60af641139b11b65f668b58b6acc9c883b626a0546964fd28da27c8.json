{"ast":null,"code":"var _jsxFileName = \"C:\\\\everything\\\\documents\\\\javascript\\\\web dev\\\\assignment3\\\\CSCI39548-assignment-3\\\\src\\\\components\\\\Credits.js\",\n    _s = $RefreshSig$();\n\n/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Credits = _ref => {\n  _s();\n\n  let {\n    credits,\n    setCredits,\n    accountBalance,\n    setAccountBalance\n  } = _ref;\n  //hooks to use for setCredits and setDescription\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState(''); //handles event when user clicks on add credit\n\n  const addCredit = e => {\n    e.preventDefault();\n    const newCredit = {\n      id: credits.length + 1,\n      description: description,\n      amount: parseFloat(amount).toFixed(2),\n      date: new Date().toISOString().split('T')[0]\n    }; //adding a new credit item to the end of the list\n\n    setCredits([...credits, newCredit]); //updates balance to reflect the new item being added\n\n    setAccountBalance((parseFloat(accountBalance) + parseFloat(newCredit.amount)).toFixed(2)); //resets to blank\n\n    setDescription('');\n    setAmount('');\n  };\n\n  let creditsView = () => {\n    return credits.map(credit => {\n      let date = credit.date.slice(0, 10);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), \" \", credit.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Amount: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), \" $\", parseFloat(credit.amount).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), \" \", date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, credit.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this);\n    });\n  }; //displays list of credits with a form for user to add a new credit\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Credits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Account Balance: $\", accountBalance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addCredit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Credit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: creditsView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Return to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n  /*\r\n  <div>\r\n    <h1>Credits</h1>\r\n    <h2> Account Balance: ${accountBalance}</h2>\r\n      <form onSubmit={ (e) => {e.preventDefault(); addCredit(); }}>\r\n      <div>\r\n        <label>Description: </label>\r\n        <input\r\n          type = 'text'\r\n          value = {description}\r\n          onChange = {(e) =>setDescription(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label> Amount: </label>\r\n        <input\r\n          type = \"number\"\r\n          step = \"0.01\"\r\n          value = {amount}\r\n          onChange = {(e) => setAmount (e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type = \"submit\">Add Credit</button>\r\n    </form>\r\n    <ul>\r\n      {credits.map((credit) => (\r\n        <li key = {credit.id}>\r\n          <div>\r\n            <strong> Description: </strong> {credit.description}\r\n          </div>\r\n          <div>\r\n            <strong>Amount: </strong> ${credit.amount}\r\n          </div>\r\n          <div>\r\n            <strong>Date: </strong> {new Date(credit.date).toLocaleString()}\r\n          </div>\r\n          <hr/>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    <Link to=\"/\">Return to Home</Link>\r\n  </div>\r\n  */\n};\n\n_s(Credits, \"72h220K6CWaqXV0R8dn7euBVcCg=\");\n\n_c = Credits;\nexport default Credits;\n/*\r\n\r\n\r\n  let creditsView = () => {\r\n    const { credits } = props;\r\n    console.log(credits);\r\n\r\n    return credits.map((credit) => {\r\n      let date = credit.date.slice(0,10);\r\n      return <li key = {credit.id}> {credit.amount} {credit.description} {date} </li>   \r\n    });\r\n  }\r\n\r\n  addCredit = () => {\r\n    console.log(\"BUTTON\");\r\n    const {credit} = props;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n\r\n      {creditsView()}\r\n\r\n      <form onSubmit = {props.addCredit}>\r\n        <input type=\"text\" name=\"description\"/>\r\n        <input type=\"number\" name=\"amount\"/>\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits;\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Credits\");","map":{"version":3,"sources":["C:/everything/documents/javascript/web dev/assignment3/CSCI39548-assignment-3/src/components/Credits.js"],"names":["Link","React","useState","Credits","credits","setCredits","accountBalance","setAccountBalance","description","setDescription","amount","setAmount","addCredit","e","preventDefault","newCredit","id","length","parseFloat","toFixed","date","Date","toISOString","split","creditsView","map","credit","slice","target","value"],"mappings":"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AAA;AAAA;AAAA;AAAA,cAVF,eAoBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,kBAAsB;AAAtB;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eA2BE;AAAA,gBAAKL,WAAW;AAAhB;AAAA;AAAA;AAAA;AAAA,YA3BF,eA6BE;AAAA;AAAA;AAAA;AAAA,YA7BF,eA8BE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA,gBAAa;AAAb;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAoCE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC,CAtID;;GAAMrB,O;;KAAAA,O;AAwIN,eAAeA,OAAf;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport React, {useState} from 'react'\r\n\r\nconst Credits = ({credits, setCredits, accountBalance, setAccountBalance}) => {\r\n\r\n  //hooks to use for setCredits and setDescription\r\n  const [description, setDescription] = useState(''); \r\n  const [amount, setAmount] = useState(''); \r\n\r\n  //handles event when user clicks on add credit\r\n  const addCredit = (e) => \r\n  { \r\n    e.preventDefault();\r\n\r\n    const newCredit = { \r\n      id: credits.length + 1, \r\n      description: description, \r\n      amount: parseFloat(amount).toFixed(2), \r\n      date: new Date().toISOString().split('T')[0]\r\n      }; \r\n\r\n    \r\n    //adding a new credit item to the end of the list\r\n    setCredits([...credits, newCredit]); \r\n    //updates balance to reflect the new item being added\r\n    setAccountBalance((parseFloat(accountBalance) + parseFloat(newCredit.amount)).toFixed(2)); \r\n\r\n    //resets to blank\r\n    setDescription(''); \r\n    setAmount(''); \r\n  };\r\n\r\n  let creditsView = () => \r\n    {\r\n      return credits.map((credit) => {\r\n        let date = credit.date.slice(0,10);\r\n        return (\r\n          <li key = {credit.id}>\r\n            <div>\r\n              <strong>Description: </strong> {credit.description}\r\n            </div>\r\n            <div>\r\n              <strong>Amount: </strong> ${parseFloat(credit.amount).toFixed(2)}\r\n            </div>\r\n            <div>\r\n              <strong>Date: </strong> {date}\r\n            </div>\r\n            <hr/>\r\n          </li>\r\n        );\r\n      });\r\n    };\r\n\r\n  //displays list of credits with a form for user to add a new credit\r\n  return (\r\n\r\n    <div>\r\n      <h1>Credits</h1>\r\n      <h2>Account Balance: ${accountBalance}</h2>\r\n\r\n      <form onSubmit = {addCredit}>\r\n        <div>\r\n          <label>Description:</label>\r\n          <input\r\n            type='text'\r\n            value={description}\r\n            onChange={(e)=>setDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Amount:</label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type='submit'>Add Credit</button>\r\n      </form>\r\n\r\n      <ul>{creditsView()}</ul>\r\n\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link> \r\n    </div>\r\n  );  \r\n\r\n    /*\r\n    <div>\r\n      <h1>Credits</h1>\r\n      <h2> Account Balance: ${accountBalance}</h2>\r\n\r\n      <form onSubmit={ (e) => {e.preventDefault(); addCredit(); }}>\r\n        <div>\r\n          <label>Description: </label>\r\n          <input\r\n            type = 'text'\r\n            value = {description}\r\n            onChange = {(e) =>setDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label> Amount: </label>\r\n          <input\r\n            type = \"number\"\r\n            step = \"0.01\"\r\n            value = {amount}\r\n            onChange = {(e) => setAmount (e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type = \"submit\">Add Credit</button>\r\n      </form>\r\n      <ul>\r\n        {credits.map((credit) => (\r\n          <li key = {credit.id}>\r\n            <div>\r\n              <strong> Description: </strong> {credit.description}\r\n            </div>\r\n            <div>\r\n              <strong>Amount: </strong> ${credit.amount}\r\n            </div>\r\n            <div>\r\n              <strong>Date: </strong> {new Date(credit.date).toLocaleString()}\r\n            </div>\r\n            <hr/>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n    */\r\n  \r\n}\r\n\r\nexport default Credits;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\n  let creditsView = () => {\r\n    const { credits } = props;\r\n    console.log(credits);\r\n\r\n    return credits.map((credit) => {\r\n      let date = credit.date.slice(0,10);\r\n      return <li key = {credit.id}> {credit.amount} {credit.description} {date} </li>   \r\n    });\r\n  }\r\n\r\n  addCredit = () => {\r\n    console.log(\"BUTTON\");\r\n    const {credit} = props;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n\r\n      {creditsView()}\r\n\r\n      <form onSubmit = {props.addCredit}>\r\n        <input type=\"text\" name=\"description\"/>\r\n        <input type=\"number\" name=\"amount\"/>\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits;\r\n\r\n*/"]},"metadata":{},"sourceType":"module","externalDependencies":[]}