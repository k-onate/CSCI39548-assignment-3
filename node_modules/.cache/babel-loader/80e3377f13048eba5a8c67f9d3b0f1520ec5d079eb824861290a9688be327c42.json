{"ast":null,"code":"var _jsxFileName = \"C:\\\\everything\\\\documents\\\\javascript\\\\web dev\\\\assignment3\\\\CSCI39548-assignment-3\\\\src\\\\components\\\\Credits.js\";\n\n/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Credits = _ref => {\n  let {\n    credits,\n    accountBalance,\n    setCredits,\n    setAccountBalance\n  } = _ref;\n  const [description, setDescription] = usestate('');\n  const newCredit = {\n    id: credits.length + 1,\n    description: description,\n    amount: parseFloat(amount).toFixed(2),\n    date: new Date().toISOString().split('T'[0])\n  }; //update credits list and account balance\n\n  setCredits([...credits, newCredit]);\n  setAccountBalance(prevBalance => (parseFloat(prevBalance) + parseFloat(newCredit.amount)).toFixed(2)); //reset from fields\n\n  setDescription('');\n  setAmount(''); //part 1 was just this (part 2 is everything above, uh oh, part 1 const credits only had credits in its parameters)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Credits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        addCredit();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Amount: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Credit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: credits.map(credit => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Description: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), \" \", credit.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Amount: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), \" $\", credit.amount.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), \" \", new Date(credit.date).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, credit.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Return to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Credits;\nexport default Credits;\n/*\r\n\r\n\r\n  let creditsView = () => {\r\n    const { credits } = props;\r\n    console.log(credits);\r\n\r\n    return credits.map((credit) => {\r\n      let date = credit.date.slice(0,10);\r\n      return <li key = {credit.id}> {credit.amount} {credit.description} {date} </li>   \r\n    });\r\n  }\r\n\r\n  addCredit = () => {\r\n    console.log(\"BUTTON\");\r\n    const {credit} = props;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n\r\n      {creditsView()}\r\n\r\n      <form onSubmit = {props.addCredit}>\r\n        <input type=\"text\" name=\"description\"/>\r\n        <input type=\"number\" name=\"amount\"/>\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits;\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Credits\");","map":{"version":3,"sources":["C:/everything/documents/javascript/web dev/assignment3/CSCI39548-assignment-3/src/components/Credits.js"],"names":["Link","React","useState","Credits","credits","accountBalance","setCredits","setAccountBalance","description","setDescription","usestate","newCredit","id","length","amount","parseFloat","toFixed","date","Date","toISOString","split","prevBalance","setAmount","e","preventDefault","addCredit","target","value","map","credit","toLocaleString"],"mappings":"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","sourcesContent":["/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport React, {useState} from 'react'\r\n\r\nconst Credits = ({credits, accountBalance, setCredits, setAccountBalance}) => {\r\n\r\n  const[description, setDescription] = usestate('');\r\n\r\n  const newCredit = {\r\n    id:credits.length+1,\r\n    description: description,\r\n    amount: parseFloat(amount).toFixed(2),\r\n    date: new Date().toISOString().split('T'[0])\r\n  };\r\n\r\n  //update credits list and account balance\r\n  setCredits([...credits, newCredit]);\r\n  setAccountBalance((prevBalance) => (parseFloat(prevBalance)+parseFloat(newCredit.amount)).toFixed(2));\r\n\r\n  //reset from fields\r\n  setDescription('');\r\n  setAmount('');\r\n\r\n\r\n  //part 1 was just this (part 2 is everything above, uh oh, part 1 const credits only had credits in its parameters)\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n      <form onSubmit={(e) => {e.preventDefault(); addCredit(); }}>\r\n        <div>\r\n          <label>Description: </label>\r\n          <input\r\n            type = 'text'\r\n            value = {description}\r\n            onChange = {(e) =>setDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label> Amount: </label>\r\n          <input\r\n            type = \"number\"\r\n            step = \"0.01\"\r\n            value = {amount}\r\n            onChange = {(e) => setAmount (e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type = \"submit\">Add Credit</button>\r\n      </form>\r\n      <ul>\r\n        {credits.map((credit) => (\r\n          <li key = {credit.id}>\r\n            <div>\r\n              <strong> Description: </strong> {credit.description}\r\n            </div>\r\n            <div>\r\n              <strong>Amount: </strong> ${credit.amount.toFixed(2)}\r\n            </div>\r\n            <div>\r\n              <strong>Date: </strong> {new Date(credit.date).toLocaleString()}\r\n            </div>\r\n            <hr/>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\n  let creditsView = () => {\r\n    const { credits } = props;\r\n    console.log(credits);\r\n\r\n    return credits.map((credit) => {\r\n      let date = credit.date.slice(0,10);\r\n      return <li key = {credit.id}> {credit.amount} {credit.description} {date} </li>   \r\n    });\r\n  }\r\n\r\n  addCredit = () => {\r\n    console.log(\"BUTTON\");\r\n    const {credit} = props;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n\r\n      {creditsView()}\r\n\r\n      <form onSubmit = {props.addCredit}>\r\n        <input type=\"text\" name=\"description\"/>\r\n        <input type=\"number\" name=\"amount\"/>\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits;\r\n\r\n*/"]},"metadata":{},"sourceType":"module","externalDependencies":[]}